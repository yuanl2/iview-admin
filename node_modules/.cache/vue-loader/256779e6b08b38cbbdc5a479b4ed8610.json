{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\code\\iview-admin\\src\\view\\excel\\upload-excel.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\view\\excel\\upload-excel.vue","mtime":1535094297490},{"path":"C:\\work\\code\\iview-admin\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\less-loader\\dist\\cjs.js","mtime":1535091217651},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n@import \"./common.less\";\n",{"version":3,"sources":["upload-excel.vue"],"names":[],"mappings":";AACA","file":"upload-excel.vue","sourceRoot":"src\\view\\excel","sourcesContent":["<style lang=\"less\">\r\n  @import \"./common.less\";\r\n</style>\r\n<template>\r\n  <div>\r\n    <Card title=\"导入EXCEL\">\r\n      <Row>\r\n        <Upload action=\"\" :before-upload=\"handleBeforeUpload\" accept=\".xls, .xlsx\">\r\n          <Button icon=\"ios-cloud-upload-outline\" :loading=\"uploadLoading\" @click=\"handleUploadFile\">上传文件</Button>\r\n        </Upload>\r\n      </Row>\r\n      <Row>\r\n        <div class=\"ivu-upload-list-file\" v-if=\"file !== null\">\r\n          <Icon type=\"ios-stats\"></Icon>\r\n            {{ file.name }}\r\n          <Icon v-show=\"showRemoveFile\" type=\"ios-close\" class=\"ivu-upload-list-remove\" @click.native=\"handleRemove()\"></Icon>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <transition name=\"fade\">\r\n          <Progress v-if=\"showProgress\" :percent=\"progressPercent\" :stroke-width=\"2\">\r\n            <div v-if=\"progressPercent == 100\">\r\n              <Icon type=\"ios-checkmark-circle\"></Icon>\r\n              <span>成功</span>\r\n            </div>\r\n          </Progress>\r\n        </transition>\r\n      </Row>\r\n    </Card>\r\n    <Row class=\"margin-top-10\">\r\n      <Table :columns=\"tableTitle\" :data=\"tableData\" :loading=\"tableLoading\"></Table>\r\n    </Row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport excel from '@/libs/excel'\r\nexport default {\r\n  name: 'upload-excel',\r\n  data () {\r\n    return {\r\n      uploadLoading: false,\r\n      progressPercent: 0,\r\n      showProgress: false,\r\n      showRemoveFile: false,\r\n      file: null,\r\n      tableData: [],\r\n      tableTitle: [],\r\n      tableLoading: false\r\n    }\r\n  },\r\n  methods: {\r\n    initUpload () {\r\n      this.file = null\r\n      this.showProgress = false\r\n      this.loadingProgress = 0\r\n      this.tableData = []\r\n      this.tableTitle = []\r\n    },\r\n    handleUploadFile () {\r\n      this.initUpload()\r\n    },\r\n    handleRemove () {\r\n      this.initUpload()\r\n      this.$Message.info('上传的文件已删除！')\r\n    },\r\n    handleBeforeUpload (file) {\r\n      const fileExt = file.name.split('.').pop().toLocaleLowerCase()\r\n      if (fileExt === 'xlsx' || fileExt === 'xls') {\r\n        this.readFile(file)\r\n        this.file = file\r\n      } else {\r\n        this.$Notice.warning({\r\n          title: '文件类型错误',\r\n          desc: '文件：' + file.name + '不是EXCEL文件，请选择后缀为.xlsx或者.xls的EXCEL文件。'\r\n        })\r\n      }\r\n      return false\r\n    },\r\n    // 读取文件\r\n    readFile (file) {\r\n      const reader = new FileReader()\r\n      reader.readAsArrayBuffer(file)\r\n      reader.onloadstart = e => {\r\n        this.uploadLoading = true\r\n        this.tableLoading = true\r\n        this.showProgress = true\r\n      }\r\n      reader.onprogress = e => {\r\n        this.progressPercent = Math.round(e.loaded / e.total * 100)\r\n      }\r\n      reader.onerror = e => {\r\n        this.$Message.error('文件读取出错')\r\n      }\r\n      reader.onload = e => {\r\n        this.$Message.info('文件读取成功')\r\n        const data = e.target.result\r\n        const { header, results } = excel.read(data, 'array')\r\n        const tableTitle = header.map(item => { return { title: item, key: item } })\r\n        this.tableData = results\r\n        this.tableTitle = tableTitle\r\n        this.uploadLoading = false\r\n        this.tableLoading = false\r\n        this.showRemoveFile = true\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n\r\n  },\r\n  mounted () {\r\n\r\n  }\r\n}\r\n</script>\r\n"]}]}
{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\code\\iview-admin\\src\\components\\charts\\bar2.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\components\\charts\\bar2.vue","mtime":1542637621352},{"path":"C:\\work\\code\\iview-admin\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\less-loader\\dist\\cjs.js","mtime":1535091217651},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.charts{\n  //\n}\n",{"version":3,"sources":["bar2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgPA;AACA;AACA","file":"bar2.vue","sourceRoot":"src\\components\\charts","sourcesContent":["<template>\n  <div ref=\"dom\" class=\"charts chart-bar2\"></div>\n</template>\n\n<script>\nimport echarts from 'echarts'\nimport tdTheme from './theme.json'\necharts.registerTheme('tdTheme', tdTheme)\nexport default {\n  name: 'ChartBar2',\n  props: {\n    value: Object,\n    text: String,\n    subtext: String\n  },\n  watch: {\n    value: function (newValue, oldValue) {\n      this.$nextTick(() => {\n        let xAxisData = this.value.locations\n        let seriesData1 = this.value.todayAverageIncome\n        let seriesData2 = this.value.currentMonthAverageIncome\n        let seriesData3 = this.value.allAverageIncome\n        let option = {\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'cross',\n              crossStyle: {\n                color: '#999'\n              }\n            }\n          },\n          toolbox: {\n            feature: {\n              dataView: {show: true, readOnly: false},\n              magicType: {show: true, type: ['line', 'bar']},\n              restore: {show: true},\n              saveAsImage: {show: true}\n            }\n          },\n          legend: {\n            data: ['当日台均收益', '当月台均收益', '历史总台均收益']\n          },\n          xAxis: {\n            type: 'category',\n            data: xAxisData,\n            axisPointer: {\n              type: 'shadow'\n            },\n            axisLabel: {\n              show: true,\n              interval: 0,\n              rotate: 30,\n              textStyle: {\n                color: '#800080',\n                fontFamily: 'verdana',\n                fontSize: 16,\n                fontStyle: 'normal',\n                fontWeight: 'bold'\n              }\n            }\n          },\n          yAxis: {\n            type: 'value',\n            axisLabel: {\n              formatter: '{value} ¥'\n            }\n          },\n          series: [{\n            name: '当日台均收益',\n            data: seriesData1,\n            type: 'bar',\n            itemStyle: {\n              normal: {\n                label: {\n                  show: false,\n                  formatter: '{c} ¥',\n                  textStyle: {\n                    color: '#800080',\n                    fontWeight: 'bold',\n                    fontSize: '16'\n                  },\n                  position: 'top'\n                }\n              }\n            }\n          },\n          {\n            name: '当月台均收益',\n            data: seriesData2,\n            type: 'bar',\n            itemStyle: {\n              normal: {\n                label: {\n                  show: false,\n                  formatter: '{c} ¥',\n                  textStyle: {\n                    color: '#800080',\n                    fontWeight: 'bold',\n                    fontSize: '16'\n                  },\n                  position: 'top'\n                }\n              }\n            }\n          },\n          {\n            name: '历史总台均收益',\n            data: seriesData3,\n            type: 'bar',\n            itemStyle: {\n              normal: {\n                label: {\n                  show: false,\n                  formatter: '{c} ¥',\n                  textStyle: {\n                    color: '#800080',\n                    fontWeight: 'bold',\n                    fontSize: '16'\n                  },\n                  position: 'top'\n                }\n              }\n            }\n          }]\n        }\n        let dom = echarts.init(this.$refs.dom, 'tdTheme')\n        dom.setOption(option)\n      })\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      let xAxisData = this.value.locations\n      let seriesData1 = this.value.todayAverageIncome\n      let seriesData2 = this.value.currentMonthAverageIncome\n      let seriesData3 = this.value.allAverageIncome\n      let option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        toolbox: {\n          feature: {\n            dataView: {show: true, readOnly: false},\n            magicType: {show: true, type: ['line', 'bar']},\n            restore: {show: true},\n            saveAsImage: {show: true}\n          }\n        },\n        legend: {\n          data: ['当日台均收益', '当月台均收益', '历史总台均收益']\n        },\n        xAxis: {\n          type: 'category',\n          data: xAxisData,\n          axisLabel: {\n            show: true,\n            interval: 0,\n            rotate: 30,\n            textStyle: {\n              color: '#800080',\n              fontFamily: 'verdana',\n              fontSize: 16,\n              fontStyle: 'normal',\n              fontWeight: 'bold'\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            formatter: '{value} ¥'\n          }\n        },\n        series: [{\n          name: '当日台均收益',\n          data: seriesData1,\n          type: 'bar',\n          itemStyle: {\n            normal: {\n              label: {\n                show: true,\n                formatter: '{c} ¥',\n                textStyle: {\n                  color: '#800080',\n                  fontWeight: 'bold',\n                  fontSize: '16'\n                },\n                position: 'top'\n              }\n            }\n          }\n        },\n        {\n          name: '当月台均收益',\n          data: seriesData2,\n          type: 'bar',\n          itemStyle: {\n            normal: {\n              label: {\n                show: true,\n                formatter: '{c} ¥',\n                textStyle: {\n                  color: '#800080',\n                  fontWeight: 'bold',\n                  fontSize: '16'\n                },\n                position: 'top'\n              }\n            }\n          }\n        },\n        {\n          name: '历史总台均收益',\n          data: seriesData3,\n          type: 'bar',\n          itemStyle: {\n            normal: {\n              label: {\n                show: true,\n                formatter: '{c} ¥',\n                textStyle: {\n                  color: '#800080',\n                  fontWeight: 'bold',\n                  fontSize: '16'\n                },\n                position: 'top'\n              }\n            }\n          }\n        }]\n      }\n      let dom = echarts.init(this.$refs.dom, 'tdTheme')\n      dom.setOption(option)\n    })\n  }\n}\n</script>\n\n<style lang=\"less\">\n.charts{\n  //\n}\n</style>\n"]}]}
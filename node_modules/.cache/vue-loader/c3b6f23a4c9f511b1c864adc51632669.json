{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\code\\iview-admin\\src\\components\\paste-editor\\paste-editor.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\components\\paste-editor\\paste-editor.vue","mtime":1535094296990},{"path":"C:\\work\\code\\iview-admin\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\less-loader\\dist\\cjs.js","mtime":1535091217651},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import './paste-editor.less';\r\n",{"version":3,"sources":["paste-editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA","file":"paste-editor.vue","sourceRoot":"src\\components\\paste-editor","sourcesContent":["<template>\r\n  <div class=\"paste-editor-wrapper\">\r\n    <textarea ref=\"codemirror\" class=\"textarea-el\"></textarea>\r\n  </div>\r\n</template>\r\n<script>\r\nimport CodeMirror from 'codemirror'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport { forEach } from '@/libs/tools'\r\nimport createPlaceholder from './plugins/placeholder'\r\nexport default {\r\n  name: 'PasteEditor',\r\n  props: {\r\n    value: Array,\r\n    pasteData: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: '从网页或其他应用软件复制表格数据，粘贴到这里 。默认第一行是表头，使用回车键添加新行，使用Tab键区分列。'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      pasteDataArr: [],\r\n      rowArrLength: 0,\r\n      editor: null\r\n    }\r\n  },\r\n  watch: {\r\n    pasteData (val) {\r\n      if (val === '') {\r\n        this.editor.setValue('')\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    rowNum () {\r\n      return this.pasteDataArr.length\r\n    },\r\n    colNum () {\r\n      return this.pasteDataArr[0] ? this.pasteDataArr[0].length : 0\r\n    }\r\n  },\r\n  methods: {\r\n    handleKeyup (e) {\r\n      this.handleAreaData()\r\n    },\r\n    /**\r\n     * @description 处理粘贴操作\r\n     */\r\n    handleContentChanged (content) {\r\n      let pasteData = content.trim()\r\n      this.$emit('on-content-change', pasteData)\r\n      let rows = pasteData.split((/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g)).map(row => {\r\n        return row.split('\\t')\r\n      })\r\n      if (content === '') rows = []\r\n      this.pasteDataArr = rows\r\n      this.clearLineClass()\r\n      this.checkColNumInEveryRow()\r\n      this.$emit('input', this.pasteDataArr)\r\n    },\r\n    /**\r\n     * @description 检查除第一行的每一行列数是否与第一行相同\r\n     */\r\n    checkColNumInEveryRow () {\r\n      let i = 0\r\n      const len = this.rowNum\r\n      if (len === 0) return\r\n      while (++i < len) {\r\n        let item = this.pasteDataArr[i]\r\n        if (item.length !== this.colNum && (!(i === len - 1 && item.length === 1 && item[0] === '') || i !== len - 1)) {\r\n          this.markIncorrectRow(i)\r\n          this.$emit('on-error', i)\r\n          return false\r\n        }\r\n      }\r\n      this.$emit('on-success', this.pasteDataArr)\r\n      return true\r\n    },\r\n    /**\r\n     * @description 标记不符合格式的一行\r\n     */\r\n    markIncorrectRow (index) {\r\n      this.editor.addLineClass(index, 'text', 'incorrect-row')\r\n    },\r\n    /**\r\n     * @description 标记不符合格式的一行\r\n     */\r\n    clearLineClass () {\r\n      forEach(this.pasteDataArr, (item, index) => {\r\n        this.editor.removeLineClass(index, 'text', 'incorrect-row')\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    createPlaceholder(CodeMirror)\r\n    this.editor = CodeMirror.fromTextArea(this.$refs.codemirror, {\r\n      lineNumbers: true,\r\n      tabSize: 1,\r\n      lineWrapping: true,\r\n      placeholder: this.placeholder\r\n    })\r\n    this.editor.on('change', (editor) => {\r\n      this.handleContentChanged(editor.getValue())\r\n    })\r\n    this.editor.addLineClass(0, 'text', 'first-row')\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n@import './paste-editor.less';\r\n</style>\r\n"]}]}
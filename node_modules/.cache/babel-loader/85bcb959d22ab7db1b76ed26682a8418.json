{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\code\\iview-admin\\src\\components\\editor\\editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\components\\editor\\editor.vue","mtime":1535094296865},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport Editor from 'wangeditor';\nimport 'wangeditor/release/wangEditor.min.css';\nimport { oneOf } from '@/libs/tools';\nexport default {\n  name: 'Editor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n\n    /**\r\n     * 绑定的值的类型, enum: ['html', 'text']\r\n     */\n    valueType: {\n      type: String,\n      default: 'html',\n      validator: function validator(val) {\n        return oneOf(val, ['html', 'text']);\n      }\n    },\n\n    /**\r\n     * @description 设置change事件触发时间间隔\r\n     */\n    changeInterval: {\n      type: Number,\n      default: 200\n    },\n\n    /**\r\n     * @description 是否开启本地存储\r\n     */\n    cache: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    editorId: function editorId() {\n      return \"editor\".concat(this._uid);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.editor = new Editor(\"#\".concat(this.editorId));\n\n    this.editor.customConfig.onchange = function (html) {\n      var text = _this.editor.txt.text();\n\n      if (_this.cache) localStorage.editorCache = html;\n\n      _this.$emit('input', _this.valueType === 'html' ? html : text);\n\n      _this.$emit('on-change', html, text);\n    };\n\n    this.editor.customConfig.onchangeTimeout = this.changeInterval; // create这个方法一定要在所有配置项之后调用\n\n    this.editor.create(); // 如果本地有存储加载本地存储内容\n\n    var html = localStorage.editorCache;\n    if (html) this.editor.txt.html(html);\n  }\n};",{"version":3,"sources":["editor.vue"],"names":[],"mappings":";;;;;;;AAOA,OAAA,MAAA,MAAA,YAAA;AACA,OAAA,uCAAA;AACA,SAAA,KAAA,QAAA,cAAA;AACA,eAAA;AACA,QAAA,QADA;AAEA,SAAA;AACA,WAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KADA;;AAKA;;;AAGA,eAAA;AACA,YAAA,MADA;AAEA,eAAA,MAFA;AAGA,iBAAA,mBAAA,GAAA,EAAA;AACA,eAAA,MAAA,GAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA;AALA,KARA;;AAeA;;;AAGA,oBAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KAlBA;;AAsBA;;;AAGA,WAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA;AAzBA,GAFA;AAgCA,YAAA;AACA,YADA,sBACA;AACA,6BAAA,KAAA,IAAA;AACA;AAHA,GAhCA;AAqCA,SArCA,qBAqCA;AAAA;;AACA,SAAA,MAAA,GAAA,IAAA,MAAA,YAAA,KAAA,QAAA,EAAA;;AACA,SAAA,MAAA,CAAA,YAAA,CAAA,QAAA,GAAA,UAAA,IAAA,EAAA;AACA,UAAA,OAAA,MAAA,MAAA,CAAA,GAAA,CAAA,IAAA,EAAA;;AACA,UAAA,MAAA,KAAA,EAAA,aAAA,WAAA,GAAA,IAAA;;AACA,YAAA,KAAA,CAAA,OAAA,EAAA,MAAA,SAAA,KAAA,MAAA,GAAA,IAAA,GAAA,IAAA;;AACA,YAAA,KAAA,CAAA,WAAA,EAAA,IAAA,EAAA,IAAA;AACA,KALA;;AAMA,SAAA,MAAA,CAAA,YAAA,CAAA,eAAA,GAAA,KAAA,cAAA,CARA,CASA;;AACA,SAAA,MAAA,CAAA,MAAA,GAVA,CAWA;;AACA,QAAA,OAAA,aAAA,WAAA;AACA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;AAnDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"editor-wrapper\">\r\n    <div :id=\"editorId\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Editor from 'wangeditor'\r\nimport 'wangeditor/release/wangEditor.min.css'\r\nimport { oneOf } from '@/libs/tools'\r\nexport default {\r\n  name: 'Editor',\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    /**\r\n     * 绑定的值的类型, enum: ['html', 'text']\r\n     */\r\n    valueType: {\r\n      type: String,\r\n      default: 'html',\r\n      validator: (val) => {\r\n        return oneOf(val, ['html', 'text'])\r\n      }\r\n    },\r\n    /**\r\n     * @description 设置change事件触发时间间隔\r\n     */\r\n    changeInterval: {\r\n      type: Number,\r\n      default: 200\r\n    },\r\n    /**\r\n     * @description 是否开启本地存储\r\n     */\r\n    cache: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  computed: {\r\n    editorId () {\r\n      return `editor${this._uid}`\r\n    }\r\n  },\r\n  mounted () {\r\n    this.editor = new Editor(`#${this.editorId}`)\r\n    this.editor.customConfig.onchange = (html) => {\r\n      let text = this.editor.txt.text()\r\n      if (this.cache) localStorage.editorCache = html\r\n      this.$emit('input', this.valueType === 'html' ? html : text)\r\n      this.$emit('on-change', html, text)\r\n    }\r\n    this.editor.customConfig.onchangeTimeout = this.changeInterval\r\n    // create这个方法一定要在所有配置项之后调用\r\n    this.editor.create()\r\n    // 如果本地有存储加载本地存储内容\r\n    let html = localStorage.editorCache\r\n    if (html) this.editor.txt.html(html)\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"sourceRoot":"src\\components\\editor"}]}
{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\code\\iview-admin\\src\\components\\charts\\bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\components\\charts\\bar.vue","mtime":1539162913805},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\nimport echarts from 'echarts';\nimport tdTheme from './theme.json';\necharts.registerTheme('tdTheme', tdTheme);\nexport default {\n  name: 'ChartBar',\n  props: {\n    value: Object,\n    text: String,\n    subtext: String\n  },\n  watch: {\n    value: function value(newValue, oldValue) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        var xAxisData = _this.value.locations;\n        var seriesData = _this.value.averageIncome;\n        var option = {\n          title: {\n            text: _this.text,\n            subtext: _this.subtext,\n            x: 'center'\n          },\n          xAxis: {\n            type: 'category',\n            data: xAxisData,\n            axisLabel: {\n              show: true,\n              interval: 'auto',\n              textStyle: {\n                color: '#800080',\n                fontFamily: 'verdana',\n                fontSize: 16,\n                fontStyle: 'normal',\n                fontWeight: 'bold'\n              }\n            }\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: seriesData,\n            type: 'bar',\n            itemStyle: {\n              normal: {\n                label: {\n                  show: true,\n                  formatter: '{c} ¥',\n                  textStyle: {\n                    color: '#800080',\n                    fontWeight: 'bold',\n                    fontSize: '16'\n                  },\n                  position: 'top'\n                }\n              }\n            },\n            barWidth: '50%'\n          }]\n        };\n        var dom = echarts.init(_this.$refs.dom, 'tdTheme');\n        dom.setOption(option);\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    console.log('bar mounted');\n    this.$nextTick(function () {\n      var xAxisData = Object.keys(_this2.value);\n      var seriesData = Object.values(_this2.value);\n      var option = {\n        title: {\n          text: _this2.text,\n          subtext: _this2.subtext,\n          x: 'center'\n        },\n        xAxis: {\n          type: 'category',\n          data: xAxisData\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: seriesData,\n          type: 'bar'\n        }]\n      };\n      var dom = echarts.init(_this2.$refs.dom, 'tdTheme');\n      dom.setOption(option);\n    });\n  }\n};",{"version":3,"sources":["bar.vue"],"names":[],"mappings":";;;;;;;AAKA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,OAAA,MAAA,cAAA;AACA,QAAA,aAAA,CAAA,SAAA,EAAA,OAAA;AACA,eAAA;AACA,QAAA,UADA;AAEA,SAAA;AACA,WAAA,MADA;AAEA,UAAA,MAFA;AAGA,aAAA;AAHA,GAFA;AAOA,SAAA;AACA,WAAA,eAAA,QAAA,EAAA,QAAA,EAAA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,YAAA,YAAA,MAAA,KAAA,CAAA,SAAA;AACA,YAAA,aAAA,MAAA,KAAA,CAAA,aAAA;AACA,YAAA,SAAA;AACA,iBAAA;AACA,kBAAA,MAAA,IADA;AAEA,qBAAA,MAAA,OAFA;AAGA,eAAA;AAHA,WADA;AAMA,iBAAA;AACA,kBAAA,UADA;AAEA,kBAAA,SAFA;AAGA,uBAAA;AACA,oBAAA,IADA;AAEA,wBAAA,MAFA;AAGA,yBAAA;AACA,uBAAA,SADA;AAEA,4BAAA,SAFA;AAGA,0BAAA,EAHA;AAIA,2BAAA,QAJA;AAKA,4BAAA;AALA;AAHA;AAHA,WANA;AAqBA,iBAAA;AACA,kBAAA;AADA,WArBA;AAwBA,kBAAA,CAAA;AACA,kBAAA,UADA;AAEA,kBAAA,KAFA;AAGA,uBAAA;AACA,sBAAA;AACA,uBAAA;AACA,wBAAA,IADA;AAEA,6BAAA,OAFA;AAGA,6BAAA;AACA,2BAAA,SADA;AAEA,gCAAA,MAFA;AAGA,8BAAA;AAHA,mBAHA;AAQA,4BAAA;AARA;AADA;AADA,aAHA;AAiBA,sBAAA;AAjBA,WAAA;AAxBA,SAAA;AA4CA,YAAA,MAAA,QAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,EAAA,SAAA,CAAA;AACA,YAAA,SAAA,CAAA,MAAA;AACA,OAjDA;AAkDA;AApDA,GAPA;AA6DA,SA7DA,qBA6DA;AAAA;;AACA,YAAA,GAAA,CAAA,aAAA;AACA,SAAA,SAAA,CAAA,YAAA;AACA,UAAA,YAAA,OAAA,IAAA,CAAA,OAAA,KAAA,CAAA;AACA,UAAA,aAAA,OAAA,MAAA,CAAA,OAAA,KAAA,CAAA;AACA,UAAA,SAAA;AACA,eAAA;AACA,gBAAA,OAAA,IADA;AAEA,mBAAA,OAAA,OAFA;AAGA,aAAA;AAHA,SADA;AAMA,eAAA;AACA,gBAAA,UADA;AAEA,gBAAA;AAFA,SANA;AAUA,eAAA;AACA,gBAAA;AADA,SAVA;AAaA,gBAAA,CAAA;AACA,gBAAA,UADA;AAEA,gBAAA;AAFA,SAAA;AAbA,OAAA;AAkBA,UAAA,MAAA,QAAA,IAAA,CAAA,OAAA,KAAA,CAAA,GAAA,EAAA,SAAA,CAAA;AACA,UAAA,SAAA,CAAA,MAAA;AACA,KAvBA;AAwBA;AAvFA,CAAA","sourcesContent":["<template>\r\n  <div ref=\"dom\" class=\"charts chart-bar\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nimport tdTheme from './theme.json'\r\necharts.registerTheme('tdTheme', tdTheme)\r\nexport default {\r\n  name: 'ChartBar',\r\n  props: {\r\n    value: Object,\r\n    text: String,\r\n    subtext: String\r\n  },\r\n  watch: {\r\n    value: function (newValue, oldValue) {\r\n      this.$nextTick(() => {\r\n        let xAxisData = this.value.locations\r\n        let seriesData = this.value.averageIncome\r\n        let option = {\r\n          title: {\r\n            text: this.text,\r\n            subtext: this.subtext,\r\n            x: 'center'\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: xAxisData,\r\n            axisLabel: {\r\n              show: true,\r\n              interval: 'auto',\r\n              textStyle: {\r\n                color: '#800080',\r\n                fontFamily: 'verdana',\r\n                fontSize: 16,\r\n                fontStyle: 'normal',\r\n                fontWeight: 'bold'\r\n              }\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [{\r\n            data: seriesData,\r\n            type: 'bar',\r\n            itemStyle: {\r\n              normal: {\r\n                label: {\r\n                  show: true,\r\n                  formatter: '{c} ¥',\r\n                  textStyle: {\r\n                    color: '#800080',\r\n                    fontWeight: 'bold',\r\n                    fontSize: '16'\r\n                  },\r\n                  position: 'top'\r\n                }\r\n              }\r\n            },\r\n            barWidth: '50%'\r\n          }]\r\n        }\r\n        let dom = echarts.init(this.$refs.dom, 'tdTheme')\r\n        dom.setOption(option)\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    console.log('bar mounted')\r\n    this.$nextTick(() => {\r\n      let xAxisData = Object.keys(this.value)\r\n      let seriesData = Object.values(this.value)\r\n      let option = {\r\n        title: {\r\n          text: this.text,\r\n          subtext: this.subtext,\r\n          x: 'center'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: xAxisData\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: seriesData,\r\n          type: 'bar'\r\n        }]\r\n      }\r\n      let dom = echarts.init(this.$refs.dom, 'tdTheme')\r\n      dom.setOption(option)\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.charts{\r\n  //\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\components\\charts"}]}
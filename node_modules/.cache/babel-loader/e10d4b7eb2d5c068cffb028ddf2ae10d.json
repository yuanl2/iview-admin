{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\code\\iview-admin\\src\\libs\\axios.js","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\libs\\axios.js","mtime":1538899952115},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _classCallCheck from \"C:\\\\work\\\\code\\\\iview-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"C:\\\\work\\\\code\\\\iview-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/createClass\";\nimport Axios from 'axios';\nimport baseURL from '_conf/url';\nimport { Message } from 'iview';\nimport Cookies from 'js-cookie';\nimport { TOKEN_KEY } from '@/libs/util';\n\nvar httpRequest =\n/*#__PURE__*/\nfunction () {\n  function httpRequest() {\n    _classCallCheck(this, httpRequest);\n\n    this.options = {\n      method: '',\n      url: '' // 存储请求队列\n\n    };\n    this.queue = {};\n  } // 销毁请求实例\n\n\n  _createClass(httpRequest, [{\n    key: \"destroy\",\n    value: function destroy(url) {\n      delete this.queue[url];\n      var queue = Object.keys(this.queue);\n      return queue.length;\n    } // 请求拦截\n\n  }, {\n    key: \"interceptors\",\n    value: function interceptors(instance, url) {\n      var _this = this;\n\n      // 添加请求拦截器\n      instance.interceptors.request.use(function (config) {\n        if (!config.url.includes('/users')) {\n          config.headers['Authorization'] = Cookies.get(TOKEN_KEY);\n        } // Spin.show()\n        // 在发送请求之前做些什么\n\n\n        return config;\n      }, function (error) {\n        // 对请求错误做些什么\n        return Promise.reject(error);\n      }); // 添加响应拦截器\n\n      instance.interceptors.response.use(function (res) {\n        var data = res.data;\n\n        var is = _this.destroy(url);\n\n        if (!is) {\n          setTimeout(function () {// Spin.hide()\n          }, 500);\n        }\n\n        if (res.status !== 200) {\n          // 后端服务在个别情况下回报201，待确认\n          if (res.status === 401) {\n            Cookies.remove(TOKEN_KEY);\n            window.location.href = window.location.pathname + '#/login';\n            Message.error('未登录，或登录失效，请登录');\n          } else {\n            if (data.msg) Message.error(data.msg);\n          }\n\n          return false;\n        }\n\n        return data;\n      }, function (error) {\n        Message.error('服务内部错误'); // 对响应错误做点什么\n\n        return Promise.reject(error);\n      });\n    } // 创建实例\n\n  }, {\n    key: \"create\",\n    value: function create() {\n      var conf = {\n        baseURL: baseURL,\n        // timeout: 2000,\n        headers: {\n          'Content-Type': 'application/json; charset=utf-8',\n          'X-URL-PATH': location.pathname\n        }\n      };\n      return Axios.create(conf);\n    } // 合并请求实例\n\n  }, {\n    key: \"mergeReqest\",\n    value: function mergeReqest() {\n      var instances = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    } //\n    // 请求实例\n\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var instance = this.create();\n      this.interceptors(instance, options.url);\n      options = Object.assign({}, options);\n      this.queue[options.url] = instance;\n      return instance(options);\n    }\n  }]);\n\n  return httpRequest;\n}();\n\nexport default httpRequest;",null]}
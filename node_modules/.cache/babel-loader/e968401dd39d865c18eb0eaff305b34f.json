{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\code\\iview-admin\\src\\store\\module\\user.js","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\store\\module\\user.js","mtime":1538899952126},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { login, getUserInfo as _getUserInfo } from '@/api/user';\nimport { setToken as _setToken, getToken } from '@/libs/util';\nexport default {\n  state: {\n    userName: '',\n    userId: '',\n    avatorImgPath: '',\n    token: getToken(),\n    access: ''\n  },\n  mutations: {\n    setAvator: function setAvator(state, avatorPath) {\n      state.avatorImgPath = avatorPath;\n    },\n    setUserId: function setUserId(state, id) {\n      state.userId = id;\n    },\n    setUserName: function setUserName(state, name) {\n      state.userName = name;\n    },\n    setAccess: function setAccess(state, access) {\n      state.access = access;\n    },\n    setToken: function setToken(state, token) {\n      state.token = token;\n\n      _setToken(token);\n    }\n  },\n  actions: {\n    // 登录\n    handleLogin: function handleLogin(_ref, _ref2) {\n      var commit = _ref.commit;\n      var userName = _ref2.userName,\n          password = _ref2.password;\n      userName = userName.trim();\n      return new Promise(function (resolve, reject) {\n        login({\n          userName: userName,\n          password: password\n        }).then(function (res) {\n          var token = 'Bearer ' + res;\n          commit('setToken', token);\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n    // 退出登录\n    handleLogOut: function handleLogOut(_ref3) {\n      var state = _ref3.state,\n          commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        // 如果你的退出登录无需请求接口，则可以直接使用下面三行代码而无需使用logout调用接口\n        commit('setToken', '');\n        commit('setAccess', []);\n        resolve();\n      });\n    },\n    // 获取用户相关信息\n    getUserInfo: function getUserInfo(_ref4) {\n      var state = _ref4.state,\n          commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        _getUserInfo().then(function (res) {\n          var data = res;\n          commit('setAvator', data.avator);\n          commit('setUserName', data.userName);\n          commit('setUserId', data.userID);\n          commit('setAccess', data.access);\n          resolve(data);\n        }).catch(function (err) {\n          commit('setToken', '');\n          commit('setAccess', []);\n          reject(err);\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["src\\store\\module\\user.js"],"names":["login","getUserInfo","setToken","getToken","state","userName","userId","avatorImgPath","token","access","mutations","setAvator","avatorPath","setUserId","id","setUserName","name","setAccess","actions","handleLogin","commit","password","trim","Promise","resolve","reject","then","res","catch","err","handleLogOut","data","avator","userID"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,2BAAhB,QAAmC,YAAnC;AACA,SAASC,qBAAT,EAAmBC,QAAnB,QAAmC,aAAnC;AAEA,eAAe;AACbC,SAAO;AACLC,cAAU,EADL;AAELC,YAAQ,EAFH;AAGLC,mBAAe,EAHV;AAILC,WAAOL,UAJF;AAKLM,YAAQ;AALH,GADM;AAQbC,aAAW;AACTC,aADS,qBACEP,KADF,EACSQ,UADT,EACqB;AAC5BR,YAAMG,aAAN,GAAsBK,UAAtB;AACD,KAHQ;AAITC,aAJS,qBAIET,KAJF,EAISU,EAJT,EAIa;AACpBV,YAAME,MAAN,GAAeQ,EAAf;AACD,KANQ;AAOTC,eAPS,uBAOIX,KAPJ,EAOWY,IAPX,EAOiB;AACxBZ,YAAMC,QAAN,GAAiBW,IAAjB;AACD,KATQ;AAUTC,aAVS,qBAUEb,KAVF,EAUSK,MAVT,EAUiB;AACxBL,YAAMK,MAAN,GAAeA,MAAf;AACD,KAZQ;AAaTP,YAbS,oBAaCE,KAbD,EAaQI,KAbR,EAae;AACtBJ,YAAMI,KAAN,GAAcA,KAAd;;AACAN,gBAASM,KAAT;AACD;AAhBQ,GARE;AA0BbU,WAAS;AACP;AACAC,eAFO,oCAEwC;AAAA,UAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,UAArBf,QAAqB,SAArBA,QAAqB;AAAA,UAAXgB,QAAW,SAAXA,QAAW;AAC7ChB,iBAAWA,SAASiB,IAAT,EAAX;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,cAAM;AACJK,4BADI;AAEJgB;AAFI,SAAN,EAGGK,IAHH,CAGQ,eAAO;AACb,cAAMlB,QAAQ,YAAYmB,GAA1B;AACAP,iBAAO,UAAP,EAAmBZ,KAAnB;AACAgB;AACD,SAPD,EAOGI,KAPH,CAOS,eAAO;AACdH,iBAAOI,GAAP;AACD,SATD;AAUD,OAXM,CAAP;AAYD,KAhBM;AAiBP;AACAC,gBAlBO,+BAkB0B;AAAA,UAAjB1B,KAAiB,SAAjBA,KAAiB;AAAA,UAAVgB,MAAU,SAAVA,MAAU;AAC/B,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC;AACAL,eAAO,UAAP,EAAmB,EAAnB;AACAA,eAAO,WAAP,EAAoB,EAApB;AACAI;AACD,OALM,CAAP;AAMD,KAzBM;AA0BP;AACAvB,eA3BO,8BA2ByB;AAAA,UAAjBG,KAAiB,SAAjBA,KAAiB;AAAA,UAAVgB,MAAU,SAAVA,MAAU;AAC9B,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCxB,uBAAcyB,IAAd,CAAmB,eAAO;AACxB,cAAMK,OAAOJ,GAAb;AACAP,iBAAO,WAAP,EAAoBW,KAAKC,MAAzB;AACAZ,iBAAO,aAAP,EAAsBW,KAAK1B,QAA3B;AACAe,iBAAO,WAAP,EAAoBW,KAAKE,MAAzB;AACAb,iBAAO,WAAP,EAAoBW,KAAKtB,MAAzB;AACAe,kBAAQO,IAAR;AACD,SAPD,EAOGH,KAPH,CAOS,eAAO;AACdR,iBAAO,UAAP,EAAmB,EAAnB;AACAA,iBAAO,WAAP,EAAoB,EAApB;AACAK,iBAAOI,GAAP;AACD,SAXD;AAYD,OAbM,CAAP;AAcD;AA1CM;AA1BI,CAAf","sourceRoot":"C:\\work\\code\\iview-admin","sourcesContent":["import { login, getUserInfo } from '@/api/user'\r\nimport { setToken, getToken } from '@/libs/util'\r\n\r\nexport default {\r\n  state: {\r\n    userName: '',\r\n    userId: '',\r\n    avatorImgPath: '',\r\n    token: getToken(),\r\n    access: ''\r\n  },\r\n  mutations: {\r\n    setAvator (state, avatorPath) {\r\n      state.avatorImgPath = avatorPath\r\n    },\r\n    setUserId (state, id) {\r\n      state.userId = id\r\n    },\r\n    setUserName (state, name) {\r\n      state.userName = name\r\n    },\r\n    setAccess (state, access) {\r\n      state.access = access\r\n    },\r\n    setToken (state, token) {\r\n      state.token = token\r\n      setToken(token)\r\n    }\r\n  },\r\n  actions: {\r\n    // 登录\r\n    handleLogin ({ commit }, {userName, password}) {\r\n      userName = userName.trim()\r\n      return new Promise((resolve, reject) => {\r\n        login({\r\n          userName,\r\n          password\r\n        }).then(res => {\r\n          const token = 'Bearer ' + res\r\n          commit('setToken', token)\r\n          resolve()\r\n        }).catch(err => {\r\n          reject(err)\r\n        })\r\n      })\r\n    },\r\n    // 退出登录\r\n    handleLogOut ({ state, commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        // 如果你的退出登录无需请求接口，则可以直接使用下面三行代码而无需使用logout调用接口\r\n        commit('setToken', '')\r\n        commit('setAccess', [])\r\n        resolve()\r\n      })\r\n    },\r\n    // 获取用户相关信息\r\n    getUserInfo ({ state, commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        getUserInfo().then(res => {\r\n          const data = res\r\n          commit('setAvator', data.avator)\r\n          commit('setUserName', data.userName)\r\n          commit('setUserId', data.userID)\r\n          commit('setAccess', data.access)\r\n          resolve(data)\r\n        }).catch(err => {\r\n          commit('setToken', '')\r\n          commit('setAccess', [])\r\n          reject(err)\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n"]}]}
{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\code\\iview-admin\\src\\components\\editor\\editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\components\\editor\\editor.vue","mtime":1535094296865},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\nimport Editor from 'wangeditor';\nimport 'wangeditor/release/wangEditor.min.css';\nimport { oneOf } from '@/libs/tools';\nexport default {\n  name: 'Editor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n\n    /**\r\n     * 绑定的值的类型, enum: ['html', 'text']\r\n     */\n    valueType: {\n      type: String,\n      default: 'html',\n      validator: function validator(val) {\n        return oneOf(val, ['html', 'text']);\n      }\n    },\n\n    /**\r\n     * @description 设置change事件触发时间间隔\r\n     */\n    changeInterval: {\n      type: Number,\n      default: 200\n    },\n\n    /**\r\n     * @description 是否开启本地存储\r\n     */\n    cache: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    editorId: function editorId() {\n      return \"editor\".concat(this._uid);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.editor = new Editor(\"#\".concat(this.editorId));\n\n    this.editor.customConfig.onchange = function (html) {\n      var text = _this.editor.txt.text();\n\n      if (_this.cache) localStorage.editorCache = html;\n\n      _this.$emit('input', _this.valueType === 'html' ? html : text);\n\n      _this.$emit('on-change', html, text);\n    };\n\n    this.editor.customConfig.onchangeTimeout = this.changeInterval; // create这个方法一定要在所有配置项之后调用\n\n    this.editor.create(); // 如果本地有存储加载本地存储内容\n\n    var html = localStorage.editorCache;\n    if (html) this.editor.txt.html(html);\n  }\n};",null]}
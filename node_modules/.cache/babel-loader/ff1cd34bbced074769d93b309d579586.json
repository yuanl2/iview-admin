{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\code\\iview-admin\\src\\router\\index.js","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\router\\index.js","mtime":1535094297304},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from './routers';\nimport store from '@/store';\nimport iView from 'iview';\nimport { getToken, canTurnTo } from '@/libs/util';\nVue.use(Router);\nvar router = new Router({\n  routes: routes,\n  mode: 'history'\n});\nvar LOGIN_PAGE_NAME = 'login';\nrouter.beforeEach(function (to, from, next) {\n  iView.LoadingBar.start();\n  var token = getToken();\n\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    next({\n      name: LOGIN_PAGE_NAME // 跳转到登录页\n\n    });\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    // 未登陆且要跳转的页面是登录页\n    next(); // 跳转\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    next({\n      name: 'home' // 跳转到home页\n\n    });\n  } else {\n    store.dispatch('getUserInfo').then(function (user) {\n      // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n      if (canTurnTo(to.name, user.access, routes)) next(); // 有权限，可访问\n      else next({\n          replace: true,\n          name: 'error_401'\n        }); // 无权限，重定向到401页面\n    });\n  }\n});\nrouter.afterEach(function (to) {\n  iView.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});\nexport default router;",{"version":3,"sources":["src\\router\\index.js"],"names":["Vue","Router","routes","store","iView","getToken","canTurnTo","use","router","mode","LOGIN_PAGE_NAME","beforeEach","to","from","next","LoadingBar","start","token","name","dispatch","then","user","access","replace","afterEach","finish","window","scrollTo"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AAEAN,IAAIO,GAAJ,CAAQN,MAAR;AACA,IAAMO,SAAS,IAAIP,MAAJ,CAAW;AACxBC,gBADwB;AAExBO,QAAM;AAFkB,CAAX,CAAf;AAIA,IAAMC,kBAAkB,OAAxB;AAEAF,OAAOG,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCV,QAAMW,UAAN,CAAiBC,KAAjB;AACA,MAAMC,QAAQZ,UAAd;;AACA,MAAI,CAACY,KAAD,IAAUL,GAAGM,IAAH,KAAYR,eAA1B,EAA2C;AACzC;AACAI,SAAK;AACHI,YAAMR,eADH,CACmB;;AADnB,KAAL;AAGD,GALD,MAKO,IAAI,CAACO,KAAD,IAAUL,GAAGM,IAAH,KAAYR,eAA1B,EAA2C;AAChD;AACAI,WAFgD,CAEzC;AACR,GAHM,MAGA,IAAIG,SAASL,GAAGM,IAAH,KAAYR,eAAzB,EAA0C;AAC/C;AACAI,SAAK;AACHI,YAAM,MADH,CACU;;AADV,KAAL;AAGD,GALM,MAKA;AACLf,UAAMgB,QAAN,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,gBAAQ;AACzC;AACA,UAAId,UAAUM,GAAGM,IAAb,EAAmBG,KAAKC,MAAxB,EAAgCpB,MAAhC,CAAJ,EAA6CY,OAA7C,CAAoD;AAApD,WACKA,KAAK;AAAES,mBAAS,IAAX;AAAiBL,gBAAM;AAAvB,SAAL,EAHoC,CAGO;AACjD,KAJD;AAKD;AACF,CAvBD;AAyBAV,OAAOgB,SAAP,CAAiB,cAAM;AACrBpB,QAAMW,UAAN,CAAiBU,MAAjB;AACAC,SAAOC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,CAHD;AAKA,eAAenB,MAAf","sourceRoot":"C:\\work\\code\\iview-admin","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport routes from './routers'\r\nimport store from '@/store'\r\nimport iView from 'iview'\r\nimport { getToken, canTurnTo } from '@/libs/util'\r\n\r\nVue.use(Router)\r\nconst router = new Router({\r\n  routes,\r\n  mode: 'history'\r\n})\r\nconst LOGIN_PAGE_NAME = 'login'\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  iView.LoadingBar.start()\r\n  const token = getToken()\r\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\r\n    // 未登录且要跳转的页面不是登录页\r\n    next({\r\n      name: LOGIN_PAGE_NAME // 跳转到登录页\r\n    })\r\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\r\n    // 未登陆且要跳转的页面是登录页\r\n    next() // 跳转\r\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\r\n    // 已登录且要跳转的页面是登录页\r\n    next({\r\n      name: 'home' // 跳转到home页\r\n    })\r\n  } else {\r\n    store.dispatch('getUserInfo').then(user => {\r\n      // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\r\n      if (canTurnTo(to.name, user.access, routes)) next() // 有权限，可访问\r\n      else next({ replace: true, name: 'error_401' }) // 无权限，重定向到401页面\r\n    })\r\n  }\r\n})\r\n\r\nrouter.afterEach(to => {\r\n  iView.LoadingBar.finish()\r\n  window.scrollTo(0, 0)\r\n})\r\n\r\nexport default router\r\n"]}]}
{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\code\\iview-admin\\src\\directive\\directives.js","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\directive\\directives.js","mtime":1535094297114},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport { on } from '@/libs/tools';\nvar directives = {\n  draggable: {\n    inserted: function inserted(el, binding, vnode) {\n      var triggerDom = document.querySelector(binding.value.trigger);\n      triggerDom.style.cursor = 'move';\n      var bodyDom = document.querySelector(binding.value.body);\n      var pageX = 0;\n      var pageY = 0;\n      var transformX = 0;\n      var transformY = 0;\n      var canMove = false;\n\n      var handleMousedown = function handleMousedown(e) {\n        var transform = /\\(.*\\)/.exec(bodyDom.style.transform);\n\n        if (transform) {\n          transform = transform[0].slice(1, transform[0].length - 1);\n          var splitxy = transform.split('px, ');\n          transformX = parseFloat(splitxy[0]);\n          transformY = parseFloat(splitxy[1].split('px')[0]);\n        }\n\n        pageX = e.pageX;\n        pageY = e.pageY;\n        canMove = true;\n      };\n\n      var handleMousemove = function handleMousemove(e) {\n        var xOffset = e.pageX - pageX + transformX;\n        var yOffset = e.pageY - pageY + transformY;\n        if (canMove) bodyDom.style.transform = \"translate(\".concat(xOffset, \"px, \").concat(yOffset, \"px)\");\n      };\n\n      var handleMouseup = function handleMouseup(e) {\n        canMove = false;\n      };\n\n      on(triggerDom, 'mousedown', handleMousedown);\n      on(document, 'mousemove', handleMousemove);\n      on(document, 'mouseup', handleMouseup);\n    },\n    update: function update(el, binding, vnode) {\n      if (!binding.value.recover) return;\n      var bodyDom = document.querySelector(binding.value.body);\n      bodyDom.style.transform = '';\n    }\n  }\n};\nexport default directives;",null]}
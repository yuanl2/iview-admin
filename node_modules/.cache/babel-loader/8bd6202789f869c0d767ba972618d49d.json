{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\code\\iview-admin\\src\\store\\module\\app.js","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\store\\module\\app.js","mtime":1535094297320},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"C:\\\\work\\\\code\\\\iview-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport { getBreadCrumbList, setTagNavListInLocalstorage, getMenuByRouter, getTagNavListFromLocalstorage, getHomeRoute, routeHasExist } from '@/libs/util';\nimport routers from '@/router/routers';\nexport default {\n  state: {\n    breadCrumbList: [],\n    tagNavList: [],\n    homeRoute: getHomeRoute(routers),\n    local: ''\n  },\n  getters: {\n    menuList: function menuList(state, getters, rootState) {\n      return getMenuByRouter(routers, rootState.user.access);\n    }\n  },\n  mutations: {\n    setBreadCrumb: function setBreadCrumb(state, routeMetched) {\n      state.breadCrumbList = getBreadCrumbList(routeMetched, state.homeRoute);\n    },\n    setTagNavList: function setTagNavList(state, list) {\n      if (list) {\n        state.tagNavList = _toConsumableArray(list);\n        setTagNavListInLocalstorage(_toConsumableArray(list));\n      } else state.tagNavList = getTagNavListFromLocalstorage();\n    },\n    addTag: function addTag(state, _ref) {\n      var route = _ref.route,\n          _ref$type = _ref.type,\n          type = _ref$type === void 0 ? 'unshift' : _ref$type;\n\n      if (!routeHasExist(state.tagNavList, route)) {\n        if (type === 'push') state.tagNavList.push(route);else {\n          if (route.name === 'home') state.tagNavList.unshift(route);else state.tagNavList.splice(1, 0, route);\n        }\n        setTagNavListInLocalstorage(_toConsumableArray(state.tagNavList));\n      }\n    },\n    setLocal: function setLocal(state, lang) {\n      state.local = lang;\n    }\n  }\n};",null]}
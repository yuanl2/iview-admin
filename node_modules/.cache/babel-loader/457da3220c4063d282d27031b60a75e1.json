{"remainingRequest":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\code\\iview-admin\\src\\components\\paste-editor\\plugins\\placeholder.js","dependencies":[{"path":"C:\\work\\code\\iview-admin\\src\\components\\paste-editor\\plugins\\placeholder.js","mtime":1535094296996},{"path":"C:\\work\\code\\iview-admin\\.babelrc","mtime":1535094296553},{"path":"C:\\work\\code\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535091260613},{"path":"C:\\work\\code\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\work\\code\\iview-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nexport default (function (codemirror) {\n  (function (mod) {\n    mod(codemirror);\n  })(function (CodeMirror) {\n    CodeMirror.defineOption('placeholder', '', function (cm, val, old) {\n      var prev = old && old !== CodeMirror.Init;\n\n      if (val && !prev) {\n        cm.on('blur', onBlur);\n        cm.on('change', onChange);\n        cm.on('swapDoc', onChange);\n        onChange(cm);\n      } else if (!val && prev) {\n        cm.off('blur', onBlur);\n        cm.off('change', onChange);\n        cm.off('swapDoc', onChange);\n        clearPlaceholder(cm);\n        var wrapper = cm.getWrapperElement();\n        wrapper.className = wrapper.className.replace(' CodeMirror-empty', '');\n      }\n\n      if (val && !cm.hasFocus()) onBlur(cm);\n    });\n\n    function clearPlaceholder(cm) {\n      if (cm.state.placeholder) {\n        cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n        cm.state.placeholder = null;\n      }\n    }\n\n    function setPlaceholder(cm) {\n      clearPlaceholder(cm);\n      var elt = cm.state.placeholder = document.createElement('pre');\n      elt.style.cssText = 'height: 0; overflow: visible; color: #80848f;';\n      elt.style.direction = cm.getOption('direction');\n      elt.className = 'CodeMirror-placeholder';\n      var placeHolder = cm.getOption('placeholder');\n      if (typeof placeHolder === 'string') placeHolder = document.createTextNode(placeHolder);\n      elt.appendChild(placeHolder);\n      cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n    }\n\n    function onBlur(cm) {\n      if (isEmpty(cm)) setPlaceholder(cm);\n    }\n\n    function onChange(cm) {\n      var wrapper = cm.getWrapperElement();\n      var empty = isEmpty(cm);\n      wrapper.className = wrapper.className.replace(' CodeMirror-empty', '') + (empty ? ' CodeMirror-empty' : '');\n      if (empty) setPlaceholder(cm);else clearPlaceholder(cm);\n    }\n\n    function isEmpty(cm) {\n      return cm.lineCount() === 1 && cm.getLine(0) === '';\n    }\n  });\n});",{"version":3,"sources":["src\\components\\paste-editor\\plugins\\placeholder.js"],"names":["codemirror","mod","CodeMirror","defineOption","cm","val","old","prev","Init","on","onBlur","onChange","off","clearPlaceholder","wrapper","getWrapperElement","className","replace","hasFocus","state","placeholder","parentNode","removeChild","setPlaceholder","elt","document","createElement","style","cssText","direction","getOption","placeHolder","createTextNode","appendChild","display","lineSpace","insertBefore","firstChild","isEmpty","empty","lineCount","getLine"],"mappings":"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","sourceRoot":"C:\\work\\code\\iview-admin","sourcesContent":["export default (codemirror) => {\r\n  (function (mod) {\r\n    mod(codemirror)\r\n  })(function (CodeMirror) {\r\n    CodeMirror.defineOption('placeholder', '', function (cm, val, old) {\r\n      var prev = old && old !== CodeMirror.Init\r\n      if (val && !prev) {\r\n        cm.on('blur', onBlur)\r\n        cm.on('change', onChange)\r\n        cm.on('swapDoc', onChange)\r\n        onChange(cm)\r\n      } else if (!val && prev) {\r\n        cm.off('blur', onBlur)\r\n        cm.off('change', onChange)\r\n        cm.off('swapDoc', onChange)\r\n        clearPlaceholder(cm)\r\n        var wrapper = cm.getWrapperElement()\r\n        wrapper.className = wrapper.className.replace(' CodeMirror-empty', '')\r\n      }\r\n\r\n      if (val && !cm.hasFocus()) onBlur(cm)\r\n    })\r\n\r\n    function clearPlaceholder (cm) {\r\n      if (cm.state.placeholder) {\r\n        cm.state.placeholder.parentNode.removeChild(cm.state.placeholder)\r\n        cm.state.placeholder = null\r\n      }\r\n    }\r\n    function setPlaceholder (cm) {\r\n      clearPlaceholder(cm)\r\n      var elt = cm.state.placeholder = document.createElement('pre')\r\n      elt.style.cssText = 'height: 0; overflow: visible; color: #80848f;'\r\n      elt.style.direction = cm.getOption('direction')\r\n      elt.className = 'CodeMirror-placeholder'\r\n      var placeHolder = cm.getOption('placeholder')\r\n      if (typeof placeHolder === 'string') placeHolder = document.createTextNode(placeHolder)\r\n      elt.appendChild(placeHolder)\r\n      cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild)\r\n    }\r\n\r\n    function onBlur (cm) {\r\n      if (isEmpty(cm)) setPlaceholder(cm)\r\n    }\r\n    function onChange (cm) {\r\n      let wrapper = cm.getWrapperElement()\r\n      let empty = isEmpty(cm)\r\n      wrapper.className = wrapper.className.replace(' CodeMirror-empty', '') + (empty ? ' CodeMirror-empty' : '')\r\n\r\n      if (empty) setPlaceholder(cm)\r\n      else clearPlaceholder(cm)\r\n    }\r\n\r\n    function isEmpty (cm) {\r\n      return (cm.lineCount() === 1) && (cm.getLine(0) === '')\r\n    }\r\n  })\r\n}\r\n"]}]}